<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../xslt/source-code.xsl"?>
<classDetails className="com.github.sanity4j.util.PipeInputThread_Test" pathToRoot="../../../../" qaVersion="1.8.0" runDate="Tue May 23 15:28:50 AEST 2017">
<summary high="0" significant="0" moderate="0" low="1" info="0" lineCoverage="83" branchCoverage="50" quality="96"/>
<source>
<line>package com.github.sanity4j.util; </line>
<line/>
<line>import java.io.ByteArrayInputStream;</line>
<line>import java.io.ByteArrayOutputStream;</line>
<line>import java.util.Arrays;</line>
<line>import java.util.Random;</line>
<line/>
<line sev="1"><diag id="719"/>import com.github.sanity4j.util.PipeInputThread;</line>
<line/>
<line>import junit.framework.TestCase;</line>
<line/>
<line>/** </line>
<line> * PipeInputStream_Test - unit test for PipeInputStream.</line>
<line> * </line>
<line> * @author Yiannis Paschalidis</line>
<line> * @since Sanity4J 1.0</line>
<line> */</line>
<line covered="yes">public class PipeInputThread_Test extends TestCase</line>
<line>{</line>
<line>    /** Should complete in far less than 1 second. */</line>
<line>    private static final int SLEEP_TIME = 100;</line>
<line>    /** Retry count. */</line>
<line>    private static final int RETRY_COUNT = 10;</line>
<line/>
<line>    public void testPipeInput()</line>
<line>    {</line>
<line>        // Test with a fair amount of data that would </line>
<line>        // just overflow most typical buffer lengths </line>
<line covered="yes">        byte[] dataIn = new byte[65536 + 1];</line>
<line covered="yes">        new Random().nextBytes(dataIn);</line>
<line/>
<line covered="yes">        ByteArrayInputStream bais = new ByteArrayInputStream(dataIn);</line>
<line covered="yes">        ByteArrayOutputStream baos = new ByteArrayOutputStream();</line>
<line/>
<line covered="yes">        PipeInputThread pipe = new PipeInputThread(bais, baos);</line>
<line covered="yes">        pipe.start();</line>
<line/>
<line>        // Should complete in far less than a second...</line>
<line covered="partial">        for (int count = 1; count &lt; RETRY_COUNT; count++)</line>
<line>        {</line>
<line>            try</line>
<line>            {</line>
<line covered="yes">                Thread.sleep(SLEEP_TIME);</line>
<line/>
<line covered="partial">                if (!pipe.isRunning())</line>
<line>                {</line>
<line covered="yes">                    break;</line>
<line>                }</line>
<line>            }</line>
<line covered="no">            catch (InterruptedException e)</line>
<line>            {</line>
<line covered="no">                fail(&quot;Interrupted&quot;);</line>
<line covered="no">            }</line>
<line>        }</line>
<line/>
<line covered="yes">        byte[] dataOut = baos.toByteArray();</line>
<line/>
<line covered="yes">        assertEquals(&quot;Incorrect amount of data read&quot;, dataIn.length, dataOut.length);</line>
<line covered="yes">        assertTrue(&quot;Incorrect data read&quot;, Arrays.equals(dataIn, dataOut));</line>
<line covered="yes">    }</line>
<line>}</line>
</source>
<diags first="false">
<diag id="719" sev="1" tool="PMD" rule="ImportFromSamePackage">
No need to import a type that lives in the same package
</diag>
</diags>
</classDetails>
